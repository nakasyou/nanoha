# Nanoha | AI 搭載暗記用デジタルノートブック

## OSバージョン

OS バージョンは、Android 13、または iPadOS 16 で動作確認しています。

## ビルド環境

ビルドには、Bun という JavaScript ランタイムが必要です。右の URL からインストールしてください: https://bun.sh
Bun のインストールに失敗した、または Bun でのビルドが上手くいかない場合は、Node.js を使用できます。Node.js 22 および npm をセッティングアップしてください。

まず、プロジェクトルートで依存関係をインストールしてください:
```
bun i # Bun を使用する場合
npm i # Node.js を使用する場合
```

ビルドは、以下のコマンドでできます:
```
bun run build # Bun を使用する場合
npm run build # Node.js を使用する場合
```

## アプリに利用しているライブラリの一覧

依存関係の依存関係を含まないとすると、`package.json`に書いてあります。

## 利用しているDBの種類（利用されている方のみ）

Web 技術上で実行可能な IndexedDB を使用しています。
https://developer.mozilla.org/ja/docs/Web/API/IndexedDB_API

## アプリの起動手順

### サーバーの起動

ビルドしたら、サーバーを起動する必要があります:
```
bun run start # Bun を使用する場合
npm run start # Node.js を使用する場合
```

そうすると、ポート `8080` でアプリが開始されます。

### SSL について

このアプリは PWA という技術を用いているため、スマホで動作させるにはサーバーに https 経由でアクセスする必要があります。そのためには、ローカル証明書を発行するか、リモートトンネルを作るか、Web ブラウザの設定を変える必要があります。
ローカル証明書の発行の仕方に詳しくないので、リモートトンネルを作る手順と、Webブラウザの設定を変える方法を紹介します。

リモートトンネルを作る手順では、Cloudflare Tunnel を使う方法がおすすめです。
```
bunx untun tunnel http://localhost:8080 # Bun
npm untun tunnel http://localhost:8080 # Node.js
```
でトンネルが起動できるので、その URL にモバイル端末からアクセスしてください。

Web ブラウザの設定を変える場合は、Android OS の Chrome である必要があります。
まず、サーバーと同じネットワークに接続します。
そして、
chrome://flags/#unsafely-treat-insecure-origin-as-secure
を開き、そこにサーバーのプライベート IP アドレスを入力します。
そうすると、完了です。

### アプリのインストール

インストールには、「SSL について」で説明したトンネルのURLまたは、プライベートIPアドレスを入力してください。
そして、Chromeの場合右上の3個の点から「アプリのインストール」を選択してください。Safariの場合、左下の共有アイコンから「ホーム画面に追加」を選択してください。

### アプリの起動

ホーム画面に追加されたアイコンをタップすると、起動されます。

